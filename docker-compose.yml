version: '3.7'

services:
  # --- 1. Banco de Dados PostgreSQL ---
  db:
    image: postgres:15 # Usamos a v15 estável
    container_name: saas_postgres_db
    restart: always
    environment:
      # Puxa as variáveis do .env na RAIZ (automático)
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - postgres_saas_data:/var/lib/postgresql/data
    networks:
      - saas_network 
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB"]
      interval: 5s
      timeout: 5s
      retries: 10

  # --- 2. Backend (API Node.js) ---
  backend:
    build:
      context: ./backend 
    container_name: saas_backend_api
    restart: always
    env_file:
      - ./.env # <-- CORREÇÃO: Aponta para o .env na RAIZ
    ports:
      - "127.0.0.1:3001:3001" 
    networks:
      - saas_network
    depends_on:
      db:
        condition: service_healthy 

  # --- 3. Frontend (React/Nginx) ---
  frontend:
    build:
      context: ./frontend 
    container_name: saas_frontend_app
    restart: always
    ports:
      - "127.0.0.1:8080:80" 
    networks:
      - saas_network
    depends_on:
      - backend 

volumes:
  postgres_saas_data:
    name: nesthost_saas_pgdata 

networks:
  saas_network:
    driver: bridge